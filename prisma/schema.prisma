// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  UserDiscord         UserDiscord?
  UserSession         UserSession[]
  EmailAuthentication EmailAuthentication?
}

model UserDiscord {
  id           String   @id @default(uuid()) @db.Uuid
  userId       String   @unique @db.Uuid
  discordId    String   @unique @db.VarChar(255)
  username     String   @db.VarChar(255)
  accessToken  String
  refreshToken String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
}

model UserSession {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @db.Uuid
  token     String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
}

model EmailAuthentication {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @unique @db.Uuid
  token     String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
}

model UserRegistration {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique
  token     String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
